{"componentChunkName":"component---src-templates-blog-js","path":"/blog/look-up-country-by-ip-dotnet-core/","result":{"data":{"markdownRemark":{"html":"<p>As a training exercise I referenced <a href=\"https://github.com/karan/Projects\">https://github.com/karan/Projects</a> and started a project to create a web service to look up the country from an IP address with .NET Core. I used the DB-IP downloadable CSV for IP ranges and the associated countries. The code took a single night to write and consists of only a couple functions to process the table and return the country.</p>\n<p>I Parse the CSV and do an inline comparison with the submitted IP and the ranges in each row of the CSV with Linq syntax.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">var</span> uintaddress <span class=\"token operator\">=</span> <span class=\"token function\">ConvertIPToUint</span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">var</span> lines <span class=\"token operator\">=</span> System<span class=\"token punctuation\">.</span>IO<span class=\"token punctuation\">.</span>File<span class=\"token punctuation\">.</span><span class=\"token function\">ReadAllLines</span><span class=\"token punctuation\">(</span>Path<span class=\"token punctuation\">.</span><span class=\"token function\">Combine</span><span class=\"token punctuation\">(</span>projectRootFolder<span class=\"token punctuation\">,</span> <span class=\"token string\">\"wwwroot/assets/dbip-country-2018-07.csv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Select</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">=></span> a<span class=\"token punctuation\">.</span><span class=\"token function\">Split</span><span class=\"token punctuation\">(</span><span class=\"token string\">';'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">var</span> csv <span class=\"token operator\">=</span> <span class=\"token keyword\">from</span> line <span class=\"token keyword\">in</span> lines\n                          <span class=\"token keyword\">select</span> <span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">Replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Split</span><span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">var</span> code <span class=\"token operator\">=</span> <span class=\"token keyword\">from</span> range <span class=\"token keyword\">in</span> csv\n                           <span class=\"token keyword\">where</span> <span class=\"token function\">ConvertIPToUint</span><span class=\"token punctuation\">(</span>range<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> uintaddress <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">ConvertIPToUint</span><span class=\"token punctuation\">(</span>range<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> uintaddress\n                           <span class=\"token keyword\">select</span> <span class=\"token punctuation\">(</span>range<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                IP<span class=\"token punctuation\">.</span>CountryCode <span class=\"token operator\">=</span> code<span class=\"token punctuation\">.</span><span class=\"token function\">First</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Each comparison is performed by calculating an integer to represent each IP address and comparing them to a precalculated integer for the input value. The integer is calculated by the function below.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">static</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">uint</span> <span class=\"token function\">ConvertIPToUint</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">string</span> ipAddress<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">System<span class=\"token punctuation\">.</span>Net<span class=\"token punctuation\">.</span>IPAddress</span> iPAddress <span class=\"token operator\">=</span> System<span class=\"token punctuation\">.</span>Net<span class=\"token punctuation\">.</span>IPAddress<span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span>ipAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> byteIP <span class=\"token operator\">=</span> iPAddress<span class=\"token punctuation\">.</span><span class=\"token function\">GetAddressBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">uint</span> ipInUint <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">uint</span><span class=\"token punctuation\">)</span>byteIP<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">256</span> <span class=\"token operator\">*</span> <span class=\"token number\">256</span> <span class=\"token operator\">*</span> <span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            ipInUint <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">uint</span><span class=\"token punctuation\">)</span> byteIP<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">256</span> <span class=\"token operator\">*</span> <span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            ipInUint <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">uint</span><span class=\"token punctuation\">)</span> byteIP<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span>\n            ipInUint <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">uint</span><span class=\"token punctuation\">)</span> byteIP<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> ipInUint<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span></code></pre></div>\n<p>It takes only 150ms on average to parse all 672,917 rows in the CSV and return the country.</p>\n<p>The Web UI is a simple submission box with input validation both server and client side. You can see it on the demo below and the source is published to GitHub.</p>\n<p>Live Demo\n<a href=\"https://countryiplookup.azurewebsites.net\">https://countryiplookup.azurewebsites.net</a></p>\n<p>Full Source Code\n<a href=\"https://github.com/eingland/CountryIPLookup\">https://github.com/eingland/CountryIPLookup</a></p>","frontmatter":{"date":"August 04, 2018","title":"Look up country by IP Address with ASP.NET Core","tags":["Development","CSharp","Web","ASP.NET Core"]}}},"pageContext":{"slug":"look-up-country-by-ip-dotnet-core"}},"staticQueryHashes":["3649515864"]}